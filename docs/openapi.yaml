openapi: 3.1.0
info:
  title: Bank Cards Management API
  description: API for managing bank cards with admin functionality
  contact:
    name: API Support
    email: api@example.com
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
tags:
  - name: Authentication Controller
    description: APIs for user authentication and token management
  - name: Cards Controller
    description: Controller for card operations for authenticated users
  - name: Admin Cards Controller
    description: Admin Controller for CRUD operations with bank cards
  - name: Transactions Controller
    description: Controller for financial transactions between user's cards
  - name: Admin Users Controller
    description: Admin Controller for user management operations
paths:
  /auth/register:
    post:
      tags:
        - Authentication Controller
      summary: Register new user
      description: Register a new user with username and password
      operationId: register
      requestBody:
        description: Authentication credentials for registration
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
            example:
              username: new_user
              password: securePassword123
        required: true
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "400":
          description: Validation error or invalid request
          content:
            application/json:
              examples:
                Validation error:
                  description: Validation error
                  value:
                    error: password - Password should be specified;
                    timestamp: "1757618375981"
                User exists:
                  description: User exists
                  value:
                    error: username - This username is already in use;
                    timestamp: "1757618375981"
        "409":
          description: Username already exists
          content:
            application/json:
              example:
                error: Such username already exists
                timestamp: "1757618375981"
  /auth/refresh-token:
    post:
      tags:
        - Authentication Controller
      summary: Refresh JWT tokens
      description: Obtain new access and refresh tokens using a valid refresh token
      operationId: refreshToken
      requestBody:
        description: Refresh token request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
            example:
              refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        required: true
      responses:
        "200":
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JWTResponse"
              example:
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          description: Invalid refresh token format
          content:
            application/json:
              example:
                error: Invalid refresh token
                timestamp: "1757618375981"
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not found
                timestamp: "1757618375981"
  /auth/login:
    post:
      tags:
        - Authentication Controller
      summary: Login to the system
      description: Authenticate user with username and password to receive JWT tokens
      operationId: login
      requestBody:
        description: Authentication credentials for login
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
            example:
              username: existing_user
              password: userPassword123
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JWTResponse"
              example:
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                refreshToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "400":
          description: Validation error
          content:
            application/json:
              examples:
                Validation error:
                  description: Validation error
                  value:
                    error: password - Password should be specified;
                    timestamp: "1757618375981"
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not found
                timestamp: "1757618375981"
        "401":
          description: Invalid credentials
          content:
            application/json:
              example:
                error: Wrong credentials
                timestamp: "1757618375981"
  /admin/cards/create/{userId}:
    post:
      tags:
        - Admin Cards Controller
      summary: Create new card
      description: "Creates a new bank card for a specific user. Generates card number,\
        \ expiry date automatically."
      operationId: create
      parameters:
        - name: userId
          in: path
          description: ID of the user for whom the card is being created
          required: true
          schema:
            type: integer
            format: int64
          example: 5
      responses:
        "201":
          description: Card created successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not Found
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
  /transactions/transfers:
    patch:
      tags:
        - Transactions Controller
      summary: Transfer funds between cards
      description: Transfer funds between two cards owned by the same authenticated
        user. Both cards must belong to the user.
      operationId: transfer
      requestBody:
        description: Transaction request details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
            example:
              fromCard: "1234567812345678"
              toCard: "8765432187654321"
              amount: 100.5
        required: true
      responses:
        "200":
          description: Transfer completed successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "400":
          description: Invalid request parameters
          content:
            application/json:
              examples:
                Invalid amount:
                  description: Invalid amount
                  value:
                    error: Amount must have at most 2 decimal places
                    timestamp: "1757615790252"
                Same card transfer:
                  description: Same card transfer
                  value:
                    error: Transfer from the card to itself is not possible
                    timestamp: "1757615790252"
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615790252"
        "403":
          description: Access denied - cards belong to different users
          content:
            application/json:
              example:
                error: You do not have permission to transfer with these cards
                timestamp: "1757615790252"
        "402":
          description: Insufficient funds
          content:
            application/json:
              example:
                error: Insufficient funds
                timestamp: "1757615790252"
  /cards/block/{id}:
    patch:
      tags:
        - Cards Controller
      summary: Request card blocking
      description: Request blocking of a specific card. The card status will be changed
        to BLOCK_REQUESTED for admin review
      operationId: requestCardBlocking
      parameters:
        - name: id
          in: path
          description: ID of the card to block
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Blocking request submitted successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615223938"
        "403":
          description: Access denied - card belongs to another user
          content:
            application/json:
              example:
                error: You do not have permission to access this card
                timestamp: "1757615223938"
  /admin/users/{id}/username:
    patch:
      tags:
        - Admin Users Controller
      summary: Change username
      description: Changes the username of a specific user
      operationId: changeUsername
      parameters:
        - name: id
          in: path
          description: ID of the user to change username
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      requestBody:
        description: New username request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUsernameRequest"
            example:
              username: new_username
        required: true
      responses:
        "200":
          description: Username changed successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not Found
                timestamp: "1757615790252"
        "409":
          description: Username already exists
          content:
            application/json:
              example:
                error: User with such username already exists
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
  /admin/users/{id}/role:
    patch:
      tags:
        - Admin Users Controller
      summary: Assign admin role
      description: Assigns administrator role to a specific user
      operationId: assignAdminRole
      parameters:
        - name: id
          in: path
          description: ID of the user to assign admin role
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Admin role assigned successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not Found
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
  /admin/cards/{id}/status:
    patch:
      tags:
        - Admin Cards Controller
      summary: Change card status
      description: Updates the status of a specific card. Cannot change status to
        EXPIRED or BLOCK_REQUESTED directly.
      operationId: changeStatus
      parameters:
        - name: id
          in: path
          description: ID of the card to update
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      requestBody:
        description: Card status change request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeCardStatusRequest"
            example:
              status: BLOCKED
        required: true
      responses:
        "200":
          description: Card status updated successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "400":
          description: Invalid status change attempt. Trying to assign as EXPIRED
            or BLOCK_REQUESTEd
          content:
            application/json:
              example:
                error: You can change card status only to ACTIVE or BLOCKED
                timestamp: "1757615790252"
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not Found
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
  /cards/{id}:
    get:
      tags:
        - Cards Controller
      summary: Get card details
      description: Retrieve detailed information about a specific card owned by the
        authenticated user
      operationId: getCard
      parameters:
        - name: id
          in: path
          description: ID of the card to retrieve
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Card retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardResponse"
              example:
                id: 1
                ownerId: 2
                cardNumber: '**** **** **** 5678'
                expiryDate: 2029-09-11 15:05:03.693
                status: ACTIVE
                balance: 174.88
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615223938"
        "403":
          description: Access denied - card belongs to another user
          content:
            application/json:
              example:
                error: You do not have permission to access this card
                timestamp: "1757615223938"
  /cards/{id}/card-number:
    get:
      tags:
        - Cards Controller
      summary: Get full card number
      description: Retrieve the complete (decrypted) card number for a specific card.
        Requires authentication.
      operationId: getCardNumber
      parameters:
        - name: id
          in: path
          description: ID of the card to get number for
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Card number retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardNumberResponse"
              example:
                cardNumber: "1234567812345678"
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615223938"
        "403":
          description: Access denied - card belongs to another user
          content:
            application/json:
              example:
                error: You do not have permission to access this card
                timestamp: "1757615223938"
  /cards/{id}/balance:
    get:
      tags:
        - Cards Controller
      summary: Get card balance
      description: Retrieve the current balance of a specific card
      operationId: getBalance
      parameters:
        - name: id
          in: path
          description: ID of the card to get balance for
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Balance retrieved successfully
          content:
            application/json:
              example: 1500.75
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615223938"
        "403":
          description: Access denied - card belongs to another user
          content:
            application/json:
              example:
                error: You do not have permission to access this card
                timestamp: "1757615223938"
  /cards/cards:
    get:
      tags:
        - Cards Controller
      summary: Get user cards with filtering
      description: Retrieve paginated list of user's cards with sorting and filtering
        options
      operationId: getCards
      parameters:
        - name: page
          in: query
          description: Page number (zero-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 10
        - name: sort
          in: query
          description: "Sorting criteria in format: property:direction. Multiple sorts\
          \ supported"
          required: false
          schema:
            type: array
            default:
              - balance:desc
            items:
              type: string
        - name: status
          in: query
          description: Filter by card status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - BLOCKED
              - EXPIRED
              - BLOCK_REQUESTED
          example: ACTIVE
        - name: minBalance
          in: query
          description: Minimum balance filter
          required: false
          schema:
            type: number
          example: 100.0
        - name: maxBalance
          in: query
          description: Maximum balance filter
          required: false
          schema:
            type: number
          example: 5000.0
      responses:
        "200":
          description: Cards retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageResponse"
              example:
                content:
                  - id: 1
                    ownerId: 2
                    cardNumber: '**** **** **** 5678'
                    expiryDate: 2029-09-11 15:05:03.693
                    status: ACTIVE
                    balance: 673.24
                page: 0
                limit: 10
                totalElements: 3
                totalPages: 1
  /admin/users/{userId}/cards:
    get:
      tags:
        - Admin Users Controller
      summary: Get user cards
      description: Retrieves paginated list of user cards with sorting and filtering
        options
      operationId: getUserCards
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve cards for
          required: true
          schema:
            type: integer
            format: int64
          example: 1
        - name: page
          in: query
          description: Page number (zero-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
          example: 0
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
          example: 10
        - name: sort
          in: query
          description: "Sorting criteria in format: property:direction. Multiple sorts\
          \ supported"
          required: false
          schema:
            type: array
            default:
              - balance:desc
            items:
              type: string
        - name: status
          in: query
          description: Filter by card status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - BLOCKED
              - EXPIRED
              - BLOCK_REQUESTED
          example: ACTIVE
        - name: minBalance
          in: query
          description: Minimum balance filter
          required: false
          schema:
            type: number
          example: 100.0
        - name: maxBalance
          in: query
          description: Maximum balance filter
          required: false
          schema:
            type: number
          example: 5000.0
      responses:
        "200":
          description: Cards retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageResponse"
              example:
                content:
                  - id: 1
                    ownerId: 2
                    cardNumber: '**** **** **** 5678'
                    expiryDate: 2029-09-11 15:05:03.693
                    status: ACTIVE
                    balance: 673.24
                page: 0
                limit: 10
                totalElements: 3
                totalPages: 1
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageResponseCardResponse"
  /admin/users/{id}:
    get:
      tags:
        - Admin Users Controller
      summary: Get user by ID
      description: Retrieves detailed information about a specific user by their ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: User found successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
              example:
                id: 1
                username: john_doe
                role: USER
        "404":
          description: User not found
          content:
            application/json:
              example:
                error: User not Found
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /admin/cards/{id}:
    get:
      tags:
        - Admin Cards Controller
      summary: Get any card
      description: Retrieves detailed information about a specific card by its ID.
        Admin privileges required.
      operationId: get
      parameters:
        - name: id
          in: path
          description: ID of the card to retrieve
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "200":
          description: Card found successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardResponse"
              example:
                id: 1
                ownerId: 2
                cardNumber: '**** **** **** 5678'
                expiryDate: 2029-09-11 15:05:03.693
                status: ACTIVE
                balance: 174.88
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not found
                timestamp: "1757615223938"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardResponse"
    delete:
      tags:
        - Admin Cards Controller
      summary: Delete card
      description: Permanently deletes a specific card from the system. This action
        cannot be undone.
      operationId: delete
      parameters:
        - name: id
          in: path
          description: ID of the card to delete
          required: true
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        "204":
          description: Card deleted successfully
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
        "404":
          description: Card not found
          content:
            application/json:
              example:
                error: Card not Found
                timestamp: "1757615790252"
        "403":
          description: Access denied - admin privileges required
          content:
            application/json:
              schema:
                type: string
                enum:
                  - 100 CONTINUE
                  - 101 SWITCHING_PROTOCOLS
                  - 102 PROCESSING
                  - 103 EARLY_HINTS
                  - 103 CHECKPOINT
                  - 200 OK
                  - 201 CREATED
                  - 202 ACCEPTED
                  - 203 NON_AUTHORITATIVE_INFORMATION
                  - 204 NO_CONTENT
                  - 205 RESET_CONTENT
                  - 206 PARTIAL_CONTENT
                  - 207 MULTI_STATUS
                  - 208 ALREADY_REPORTED
                  - 226 IM_USED
                  - 300 MULTIPLE_CHOICES
                  - 301 MOVED_PERMANENTLY
                  - 302 FOUND
                  - 302 MOVED_TEMPORARILY
                  - 303 SEE_OTHER
                  - 304 NOT_MODIFIED
                  - 305 USE_PROXY
                  - 307 TEMPORARY_REDIRECT
                  - 308 PERMANENT_REDIRECT
                  - 400 BAD_REQUEST
                  - 401 UNAUTHORIZED
                  - 402 PAYMENT_REQUIRED
                  - 403 FORBIDDEN
                  - 404 NOT_FOUND
                  - 405 METHOD_NOT_ALLOWED
                  - 406 NOT_ACCEPTABLE
                  - 407 PROXY_AUTHENTICATION_REQUIRED
                  - 408 REQUEST_TIMEOUT
                  - 409 CONFLICT
                  - 410 GONE
                  - 411 LENGTH_REQUIRED
                  - 412 PRECONDITION_FAILED
                  - 413 PAYLOAD_TOO_LARGE
                  - 413 REQUEST_ENTITY_TOO_LARGE
                  - 414 URI_TOO_LONG
                  - 414 REQUEST_URI_TOO_LONG
                  - 415 UNSUPPORTED_MEDIA_TYPE
                  - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                  - 417 EXPECTATION_FAILED
                  - 418 I_AM_A_TEAPOT
                  - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                  - 420 METHOD_FAILURE
                  - 421 DESTINATION_LOCKED
                  - 422 UNPROCESSABLE_ENTITY
                  - 423 LOCKED
                  - 424 FAILED_DEPENDENCY
                  - 425 TOO_EARLY
                  - 426 UPGRADE_REQUIRED
                  - 428 PRECONDITION_REQUIRED
                  - 429 TOO_MANY_REQUESTS
                  - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                  - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                  - 500 INTERNAL_SERVER_ERROR
                  - 501 NOT_IMPLEMENTED
                  - 502 BAD_GATEWAY
                  - 503 SERVICE_UNAVAILABLE
                  - 504 GATEWAY_TIMEOUT
                  - 505 HTTP_VERSION_NOT_SUPPORTED
                  - 506 VARIANT_ALSO_NEGOTIATES
                  - 507 INSUFFICIENT_STORAGE
                  - 508 LOOP_DETECTED
                  - 509 BANDWIDTH_LIMIT_EXCEEDED
                  - 510 NOT_EXTENDED
                  - 511 NETWORK_AUTHENTICATION_REQUIRED
components:
  schemas:
    AuthRequest:
      type: object
      description: Authentication request DTO containing login/register credentials
      properties:
        username:
          type: string
          description: Username for authentication
          example: john_doe
          maxLength: 64
          minLength: 5
        password:
          type: string
          description: Password for authentication
          example: securePassword123
          maxLength: 60
          minLength: 5
      required:
        - password
        - username
    RefreshTokenRequest:
      type: object
      description: Refresh token request DTO
      properties:
        refreshToken:
          type: string
          description: Refresh token to obtain new access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFt...
          maxLength: 255
          minLength: 0
      required:
        - refreshToken
    JWTResponse:
      type: object
      description: JWT tokens response DTO
      properties:
        accessToken:
          type: string
          description: JWT access token for authentication
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJCYW5rIGRldGFpbHMi...
        refreshToken:
          type: string
          description: JWT refresh token for obtaining new access tokens
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJCYW5rIGRldGFpbHMi...
    TransactionRequest:
      type: object
      description: Transaction request DTO for fund transfers between cards
      properties:
        fromCard:
          type: string
          description: Source card number (16 digits)
          example: 1234567812345678
          maxLength: 16
          minLength: 16
          pattern: ^\d+$
        toCard:
          type: string
          description: Destination card number (16 digits)
          example: 8765432187654321
          maxLength: 16
          minLength: 16
          pattern: ^\d+$
        amount:
          type: number
          description: "Amount to transfer (minimum 0.01, maximum 2 decimal places)"
          example: 100.5
          minimum: 0.01
      required:
        - fromCard
        - toCard
    ChangeUsernameRequest:
      type: object
      description: Request DTO for changing username
      properties:
        username:
          type: string
          description: New username
          example: new_username
          maxLength: 64
          minLength: 5
      required:
        - username
    ChangeCardStatusRequest:
      type: object
      description: Request DTO for changing card status
      properties:
        status:
          type: string
          description: New status for the card
          enum:
            - ACTIVE
            - BLOCKED
          example: BLOCKED
          pattern: ACTIVE|BLOCKED
    CardResponse:
      type: object
      description: Card response DTO containing card details
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the card
          example: 1
        ownerId:
          type: integer
          format: int64
          description: Identifier of the card owner
          example: 2
        cardNumber:
          type: string
          description: Masked card number (16 digits)
          example: '**** **** **** 5678'
        expiryDate:
          type: string
          description: Expiry date in YYYY-MM-DD HH:MM:SS.SSS format
          example: 2029-09-11 15:05:03.693
        status:
          type: string
          description: Current status of the card
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
            - BLOCK_REQUESTED
          example: ACTIVE
        balance:
          type: number
          description: Current balance of the card
          example: 174.15
    CardNumberResponse:
      type: object
      description: Card number response DTO containing decrypted card number
      properties:
        cardNumber:
          type: string
          description: Decrypted card number (16 digits)
          example: 1234567812345678
    PageResponse:
      type: object
      description: Paginated response wrapper
      properties:
        content:
          type: array
          description: List of items on the current page
          items: {}
        page:
          type: integer
          format: int32
          description: Current page number (zero-based)
          example: 0
        limit:
          type: integer
          format: int32
          description: Number of items per page
          example: 10
        totalElements:
          type: integer
          format: int64
          description: Total number of elements across all pages
          example: 100
        totalPages:
          type: integer
          format: int32
          description: Total number of pages
          example: 10
    PageResponseCardResponse:
      type: object
      description: Paginated response wrapper
      properties:
        content:
          type: array
          description: List of items on the current page
          items:
            $ref: "#/components/schemas/CardResponse"
        page:
          type: integer
          format: int32
          description: Current page number (zero-based)
          example: 0
        limit:
          type: integer
          format: int32
          description: Number of items per page
          example: 10
        totalElements:
          type: integer
          format: int64
          description: Total number of elements across all pages
          example: 100
        totalPages:
          type: integer
          format: int32
          description: Total number of pages
          example: 10
    UserResponse:
      type: object
      description: User response DTO containing user details
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the user
          example: 1
        username:
          type: string
          description: Username of the user
          example: john_doe
        role:
          type: string
          description: Role of the user
          enum:
            - USER
            - ADMIN
          example: USER
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
