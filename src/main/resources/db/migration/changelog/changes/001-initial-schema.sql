create table user_profile(
    id bigint primary key generated by default as identity,
    username varchar(64) unique not null,
    password varchar(60) not null,
    role varchar(32) not null check (role in ('USER', 'ADMIN'))
);

create table card(
    id bigint primary key generated by default as identity,
    card_number varchar(44) unique not null,
    owner_id bigint not null,
    expiry_date timestamp not null,
    status varchar(32) not null check (status in ('ACTIVE', 'BLOCKED', 'EXPIRED', 'BLOCK_REQUESTED')),
    balance numeric(19, 2) not null default 0.00 check (balance >= 0),
    constraint fk_card_owner foreign key (owner_id) references user_profile(id) on delete cascade
);

create table transaction(
    id bigint primary key generated by default as identity ,
    from_card_number varchar(44) not null,
    to_card_number varchar(44) not null,
    amount numeric(19, 3) not null check (amount >= 0.01),
    executed_at timestamp not null
);

create table refresh_token (
    id bigint primary key generated by default as identity,
    user_id bigint not null,
    refresh_token varchar(255) not null,
    constraint fk_refresh_token_user foreign key (user_id) references user_profile(id) on delete cascade,
    constraint unique_user_token unique (user_id, refresh_token)
);